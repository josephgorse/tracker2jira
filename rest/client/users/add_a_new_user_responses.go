// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddANewUserReader is a Reader for the AddANewUser structure.
type AddANewUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddANewUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddANewUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddANewUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddANewUserCreated creates a AddANewUserCreated with default headers values
func NewAddANewUserCreated() *AddANewUserCreated {
	return &AddANewUserCreated{}
}

/*AddANewUserCreated handles this case with default header values.

Created
*/
type AddANewUserCreated struct {
}

func (o *AddANewUserCreated) Error() string {
	return fmt.Sprintf("[POST /users][%d] addANewUserCreated ", 201)
}

func (o *AddANewUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddANewUserBadRequest creates a AddANewUserBadRequest with default headers values
func NewAddANewUserBadRequest() *AddANewUserBadRequest {
	return &AddANewUserBadRequest{}
}

/*AddANewUserBadRequest handles this case with default header values.

Bad Request
*/
type AddANewUserBadRequest struct {
}

func (o *AddANewUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /users][%d] addANewUserBadRequest ", 400)
}

func (o *AddANewUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
