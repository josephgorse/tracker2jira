// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddANewTaskReader is a Reader for the AddANewTask structure.
type AddANewTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddANewTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddANewTaskCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddANewTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddANewTaskCreated creates a AddANewTaskCreated with default headers values
func NewAddANewTaskCreated() *AddANewTaskCreated {
	return &AddANewTaskCreated{}
}

/*AddANewTaskCreated handles this case with default header values.

Created
*/
type AddANewTaskCreated struct {
}

func (o *AddANewTaskCreated) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] addANewTaskCreated ", 201)
}

func (o *AddANewTaskCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddANewTaskBadRequest creates a AddANewTaskBadRequest with default headers values
func NewAddANewTaskBadRequest() *AddANewTaskBadRequest {
	return &AddANewTaskBadRequest{}
}

/*AddANewTaskBadRequest handles this case with default header values.

Bad Request
*/
type AddANewTaskBadRequest struct {
}

func (o *AddANewTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] addANewTaskBadRequest ", 400)
}

func (o *AddANewTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
