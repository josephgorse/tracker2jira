// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostTaskReader is a Reader for the PostTask structure.
type PostTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostTaskCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostTaskCreated creates a PostTaskCreated with default headers values
func NewPostTaskCreated() *PostTaskCreated {
	return &PostTaskCreated{}
}

/*PostTaskCreated handles this case with default header values.

Created
*/
type PostTaskCreated struct {
}

func (o *PostTaskCreated) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTaskCreated ", 201)
}

func (o *PostTaskCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostTaskBadRequest creates a PostTaskBadRequest with default headers values
func NewPostTaskBadRequest() *PostTaskBadRequest {
	return &PostTaskBadRequest{}
}

/*PostTaskBadRequest handles this case with default header values.

Bad Request
*/
type PostTaskBadRequest struct {
}

func (o *PostTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTaskBadRequest ", 400)
}

func (o *PostTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
