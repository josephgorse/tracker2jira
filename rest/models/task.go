// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Task task
// swagger:model Task

type Task struct {

	// current state map
	CurrentStateMap interface{} `json:"currentStateMap,omitempty"`

	// master
	Master string `json:"master,omitempty"`

	// slave
	SLAVE string `json:"slave,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// story field map
	StoryFieldMap interface{} `json:"storyFieldMap,omitempty"`

	// story type map
	StoryTypeMap interface{} `json:"storyTypeMap,omitempty"`

	// task ID
	TaskID strfmt.UUID4 `json:"taskID,omitempty"`
}

/* polymorph Task currentStateMap false */

/* polymorph Task master false */

/* polymorph Task slave false */

/* polymorph Task status false */

/* polymorph Task storyFieldMap false */

/* polymorph Task storyTypeMap false */

/* polymorph Task taskID false */

// Validate validates this task
func (m *Task) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Task) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Task) UnmarshalBinary(b []byte) error {
	var res Task
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
